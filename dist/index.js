var b=Object.defineProperty;var k=(n,s)=>{for(var e in s)b(n,e,{get:s[e],enumerable:!0})};import S from"express";import J from"cookie-parser";import{createServer as B}from"http";var q={};k(q,{enquiries:()=>u,insertEnquirySchema:()=>h,insertUserSchema:()=>R,users:()=>c});import{pgTable as v,text as i,serial as w,integer as N,timestamp as A}from"drizzle-orm/pg-core";import{createInsertSchema as U}from"drizzle-zod";var u=v("enquiries",{id:w("id").primaryKey(),firstName:i("first_name").notNull(),lastName:i("last_name").notNull(),email:i("email").notNull(),phone:i("phone"),checkinDate:i("checkin_date"),checkoutDate:i("checkout_date"),guests:N("guests"),message:i("message"),createdAt:A("created_at").defaultNow()}),h=U(u).omit({id:!0,createdAt:!0}),c=v("users",{id:w("id").primaryKey(),username:i("username").notNull().unique(),password:i("password").notNull()}),R=U(c).pick({username:!0,password:!0});import"dotenv/config";import _ from"postgres";import{drizzle as D}from"drizzle-orm/postgres-js";if(!process.env.DATABASE_URL)throw new Error("DATABASE_URL must be set. Check your .env file or environment configuration.");var z=_(process.env.DATABASE_URL,{ssl:"require"}),p=D(z,{schema:q});import{eq as E,desc as T}from"drizzle-orm";var x=class{async getUser(s){let[e]=await p.select().from(c).where(E(c.id,s));return e||void 0}async getUserByUsername(s){let[e]=await p.select().from(c).where(E(c.username,s));return e||void 0}async createUser(s){let[e]=await p.insert(c).values(s).returning();return e}async createEnquiry(s){let[e]=await p.insert(u).values(s).returning();return e}async getEnquiries(){return await p.select().from(u).orderBy(T(u.createdAt))}async getEnquiry(s){let[e]=await p.select().from(u).where(E(u.id,s));return e||void 0}},f=new x;import{z as C}from"zod";var g=new Set,L=()=>Math.random().toString(36).substring(2)+Date.now().toString(36),O=(n,s,e)=>{let r=n.headers["x-session-id"]||n.cookies?.adminSession;if(!r||!g.has(r))return s.status(401).json({message:"Unauthorized"});e()};async function I(n){return n.post("/api/enquiries",async(e,r)=>{try{let t=h.parse(e.body),o=await f.createEnquiry(t);console.log("New enquiry received:",o),r.status(201).json(o)}catch(t){t instanceof C.ZodError?r.status(400).json({message:"Validation error",errors:t.errors}):r.status(500).json({message:"Internal server error"})}}),n.get("/api/enquiries",O,async(e,r)=>{try{let t=await f.getEnquiries();r.json(t)}catch{r.status(500).json({message:"Internal server error"})}}),n.get("/api/enquiries/:id",async(e,r)=>{try{let t=parseInt(e.params.id),o=await f.getEnquiry(t);if(!o){r.status(404).json({message:"Enquiry not found"});return}r.json(o)}catch{r.status(500).json({message:"Internal server error"})}}),n.post("/api/admin/login",async(e,r)=>{try{let{username:t,password:o}=e.body;if(t==="admin"&&o==="cottage2024"){let a=L();g.add(a),r.cookie("adminSession",a,{httpOnly:!0,secure:process.env.NODE_ENV==="production",maxAge:24*60*60*1e3}),r.json({success:!0,sessionId:a})}else r.status(401).json({message:"Invalid credentials"})}catch{r.status(500).json({message:"Internal server error"})}}),n.get("/api/admin/auth",(e,r)=>{let t=e.headers["x-session-id"]||e.cookies?.adminSession;t&&g.has(t)?r.json({authenticated:!0}):r.status(401).json({authenticated:!1})}),n.post("/api/admin/logout",(e,r)=>{let t=e.headers["x-session-id"]||e.cookies?.adminSession;t&&g.delete(t),r.clearCookie("adminSession"),r.json({success:!0})}),B(n)}import F from"express";import j from"fs";import $ from"path";function l(n,s="express"){let e=new Date().toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0});console.log(`${e} [${s}] ${n}`)}function P(n){let s=$.resolve("dist/server","..","public");if(!j.existsSync(s))throw l(`Static assets directory not found: ${s}. Ensure client is built.`,"error"),new Error(`Could not find the build directory: ${s}, make sure to build the client first`);l(`Serving static files from ${s}`),n.use(F.static(s)),n.use("*",(e,r)=>{let t=$.resolve(s,"index.html");j.existsSync(t)?r.sendFile(t):(l(`index.html not found in ${s}`,"error"),r.status(404).send("Client application not found. Please build the client."))})}var y=S();y.use(S.json());y.use(S.urlencoded({extended:!1}));y.use(J());y.use((n,s,e)=>{let r=Date.now(),t=n.path,o,a=s.json;s.json=function(m,...d){return o=m,a.apply(s,[m,...d])},s.on("finish",()=>{let m=Date.now()-r;if(t.startsWith("/api")){let d=`${n.method} ${t} ${s.statusCode} in ${m}ms`;o&&(d+=` :: ${JSON.stringify(o)}`),d.length>80&&(d=d.slice(0,79)+"\u2026"),l(d)}}),e()});(async()=>{let n=await I(y);y.use((e,r,t,o)=>{let a=e.status||e.statusCode||500,m=e.message||"Internal Server Error";l(`Error: ${a} - ${m}${e.stack?` - Stack: ${e.stack}`:""}`,"error"),t.status(a).json({message:m})}),P(y);let s=process.env.PORT||5e3;n.listen({port:Number(s),host:"0.0.0.0"},()=>{l(`serving on port ${s}`)})})();
//# sourceMappingURL=index.js.map
